import time
import requests
import __main__
from dotenv import load_dotenv
import os
import json
import schedule
from AWS import  keys
from apscheduler.schedulers.background import BackgroundScheduler

scheduler = BackgroundScheduler()
load_dotenv()

ACCESS_TOKEN = os.environ.get('ZB_PROMO')
# print(ACCESS_TOKEN, 'ACCESS_TOKEN')

if not ACCESS_TOKEN:
    TOKEN_OBJ = json.loads(keys.get_secret("ZB_PROMO"))
  
    ACCESS_TOKEN = TOKEN_OBJ.get('ZB_PROMO')
    print("ACCESS_TOKEN", ACCESS_TOKEN)
# Load environment variables from .env file



"""Group_Me_Auto_Post.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oITT6EyLRr3TcbONVV7-KxevZs1EmjHT
"""
formatted_text = f"""\
69ine gets left 
bloody in gym
"""
post_interval = 2



# Commented out IPython magic to ensure Python compatibility.
# %pip install json
# %pip install markdown

# @title Formatted Text




#################################################################
# @title Post function 


def send_message_to_groups(new_bots: list, message: str) -> str:
    """
    Sends a message to the specified GroupMe groups via the corresponding bots.

    Args:
        new_bots (list): A list of bot objects, where each object contains a 'bot_id' and 'group_id'.
        message (str): The message to be sent to the groups.

    Returns:
        str: A string indicating the message was sent to all groups successfully.

    Raises:
        Exception: If an error occurs while sending the message to any of the groups.
    """
    url = 'https://api.groupme.com/v3/bots/post'
    headers = {'Content-Type': 'application/json',
               'X-Access-Token': ACCESS_TOKEN}
    payload = {'text': message, 'attachments': []}
    # print('new_bots)', new_bots)
    for i, bot in enumerate(new_bots):
        bot_id = bot['bot_id']
        group_id = bot['group_id']
        payload['bot_id'] = bot_id
        if i > 0:
            time.sleep(1)
            try:
                # response = requests.post(
                # url, headers=headers, data=json.dumps(payload))
                
                print(f"Bot: '{bot_id}' sent message to group '{group_id}'. Status code: ")
                           
            except Exception:
                pass
                raise Exception(
                    f"Error sending message by bot '{bot_id}' to group '{group_id}'. Status code: ")
    print(new_bots)                        
    return "Message sent to all groups successfully."





# @title  Post Message Periodically








